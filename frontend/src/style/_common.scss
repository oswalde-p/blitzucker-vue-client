@import '../../style/_colors.scss';

.floating-action-button {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  float: right;
  position: fixed;
  right: 1rem;
  bottom: 1rem;
  background-color: $secondary;
  font-size: 3.5rem;
  text-align: center;
  color: white;
  a {
    text-decoration: none;
    color: inherit;
  }
  box-shadow: 1px 2px 6px 0 rgba(0, 0, 0, 0.2), 3px 4px 12px 0 rgba(0, 0, 0, 0.19);
}

/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size, $start-angle) {
  position: relative;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    height: $item-size;
    // margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: $start-angle;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform:
          rotate($rot * 1deg)
          translate($circle-size / 2)
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}
